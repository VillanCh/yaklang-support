{
    "Err": {
        "prefix": "err",
        "body": [
            "if err != nil {",
            "    ${1:die(err)}",
            "}",
            "${2}"
        ],
        "description": "Log output to console"
    },
    "SynScan": {
        "prefix": "synscan",
        "body": [
            "synResults, err := synscan.Scan(${1:host}, ${2:ports})",
            "die(err)",
            "for result := range synResults {",
            "    ${3}",
            "}"
        ]
    },
    "for res := range channel": {
        "prefix": "forch",
        "body": [
            "for ${1:element} := range ${2:ch} {",
            "    ${3}",
            "}"
        ]
    },
    "for index, element := range slice": {
        "prefix": "foreach",
        "body": [
            "for index, element := range ${1:sliceVar} {",
            "    ${2}",
            "}"
        ]
    },
    "Go Function": {
        "prefix": "go",
        "body": [
            "go fn() {",
            "    ${1:/* concurrent body */}",
            "}()"
        ],
        "description": "Log output to console"
    },
    "loglevel(`info`|`warn`|`error`) 设置日志级别": {
        "prefix": "loglevel",
        "body": [
            "loglevel(${1:`info`})",
            "$2"
        ]
    },
    "uuid(): string": {
        "prefix": "uuid",
        "body": [
            "uid = uuid()",
            "$1"
        ]
    },
    "die(err) 如果遇到错误直接结束脚本": {
        "prefix": "die",
        "body": [
            "die(${1:err})",
            "$2"
        ]
    }
}